name: Release EorzeaLink

on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Download the Dalamud dev refs to a temp folder
      - name: Download Dalamud dev libs
        shell: pwsh
        run: |
          $ProgressPreference = 'SilentlyContinue'
          New-Item -ItemType Directory -Force dl | Out-Null
          $zip = "$(Resolve-Path dl)\dalamud.zip"
          # Use your own mirror if you have one; this public one is commonly used.
          $url = "${{ secrets.DALAMUD_ZIP_URL }}"
          if ([string]::IsNullOrWhiteSpace($url)) {
            $url = "https://goatcorp.github.io/dalamud-distrib/latest.zip"
          }
          Write-Host "Downloading Dalamud from $url"
          Invoke-WebRequest -Uri $url -OutFile $zip
          Expand-Archive -Path $zip -DestinationPath dl\dalamud -Force
          Get-ChildItem dl\dalamud

      - name: Restore
        run: dotnet restore

      - name: Build Release (point to downloaded libs)
        run: dotnet build EorzeaLink/EorzeaLink.csproj -c Release -p:ContinuousIntegrationBuild=true -p:DalamudLibPath="${{ github.workspace }}\dl\dalamud\"

      - name: Stage files
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force dist | Out-Null
          $out = "EorzeaLink\bin\x64\Release\EorzeaLink"
          Copy-Item "$out\EorzeaLink.dll" dist\
          Copy-Item "EorzeaLink\EorzeaLink.json" dist\
          if (Test-Path "Glamourer.Api\bin\Release\Glamourer.Api.dll") { Copy-Item "Glamourer.Api\bin\Release\Glamourer.Api.dll" dist\ }
          if (Test-Path "EorzeaLink\icon.png") { Copy-Item "EorzeaLink\icon.png" dist\ }
          # Include extra runtime deps you *actually* need (skip Dalamud/Lumina)
          Get-ChildItem $out -Filter *.dll |
            Where-Object { $_.Name -notin @('EorzeaLink.dll','Glamourer.Api.dll') -and $_.Name -notmatch '^Dalamud|^Lumina' } |
            Copy-Item -Destination dist\

      - name: Zip
        shell: pwsh
        run: Compress-Archive -Path "dist\*" -DestinationPath "EorzeaLink.zip" -Force

      - name: SHA256
        shell: pwsh
        run: |
          $h = Get-FileHash -Algorithm SHA256 "EorzeaLink.zip"
          $h.Hash | Out-File -FilePath "EorzeaLink.zip.sha256" -Encoding ascii

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            EorzeaLink.zip
            EorzeaLink.zip.sha256
          generate_release_notes: true
